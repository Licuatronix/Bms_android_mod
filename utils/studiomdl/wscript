#! /usr/bin/env python
# encoding: utf-8
# vim: noexpandtab

from waflib import Utils
import os

top = '.'
PROJECT_NAME = 'studiomdl'

def options(opt):
	# stub
	return

def configure(conf):
	conf.define('PROTECTED_THINGS_DISABLE', 1)
	return

def build(bld):
	source = [
		'UnifyLODs.cpp',
		'checkuv.cpp',
		'collisionmodel.cpp',
		'dmxsupport.cpp',
		'hardwarematrixstate.cpp',
		'hardwarevertexcache.cpp',
		'mrmsupport.cpp',
		'objsupport.cpp',
		'optimize.cpp',
		'perfstats.cpp',
		'simplify.cpp',
		'studiomdl.cpp',
		'v1support.cpp',
		'write.cpp',
		'../common/cmdlib.cpp',
		'../common/filesystem_tools.cpp',
		'../common/physdll.cpp',
		'../common/scriplib.cpp',
		'../../filesystem/linux_support.cpp',
		'../../public/filesystem_helpers.cpp',
		'../../public/filesystem_init.cpp',
		'../../public/bone_setup.cpp',
		'../../public/collisionutils.cpp',
		'../../public/interpolatortypes.cpp',
		'../../public/mdlobjects/mdlobjects.cpp',
		'../../public/movieobjects/movieobjects_compiletools.cpp',
		'../../public/studio.cpp',
		'../../common/studiobyteswap.cpp',
	]

	includes = [
		'.',
		'../common',
		'../../public',
		'../../public/tier0',
		'../../public/tier1',
		'../../public/tier2',
		'../../public/tier3',
		'../../public/vstdlib',
	]

	defines = []

	libs = [
		'tier0', 'tier1', 'tier2', 'tier3',
		'appframework',
        'datamodel',
        'dmserializers',
        'mathlib',
        'mdlobjects',
        'movieobjects',
#		'nvtristrip',
		'vstdlib',
	]

	if bld.env.DEST_OS == 'win32':
		libs += ['USER32']

	install_path = bld.env.BINDIR

	bld(
		source   = source,
		target   = PROJECT_NAME,
		name     = PROJECT_NAME,
		features = 'c cxx cxxprogram',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = bld.get_taskgen_count()
	)

